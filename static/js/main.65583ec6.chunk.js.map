{"version":3,"sources":["components/Searchbar/Searchbar.js","utils/API.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Button/Button.js","components/ImageGallery/ImageGallery.js","components/Loader/Loader.js","components/Modal/Modal.js","App.js","index.js"],"names":["Header","styled","header","Form","form","Button","button","Span","span","Input","input","defaultValue","onChange","onSubmit","type","autocomplete","autoFocus","value","placeholder","searchQuery","page","axios","get","ImageGalleryItem","li","ImageGalleryImg","img","ImageItem","item","imgClick","src","webformatURL","data-action","largeImageURL","onClick","propType","PropTypes","object","isRequired","LoadMore","ImageGallerys","ul","ImageGallery","articles","allArticles","map","el","key","id","length","Loader","className","Modal","overlayClick","esc","closeModal","e","useEffect","window","addEventListener","removeEventListener","alt","useState","setSearchQuery","nextPage","setNextPage","galleryList","setGalleryList","isLoaded","setLoader","totalArticles","setTotalArticles","overlayImg","setOverlayImg","scrollTo","top","document","documentElement","scrollHeight","behavior","Searchbar","target","preventDefault","fetchRequest","then","data","hits","totalHits","dataset","action","nodeName","ReactDOM","render","StrictMode","App","getElementById"],"mappings":"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","file":"static/js/main.65583ec6.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Header = styled.header`\r\n top: 0;\r\n  left: 0;\r\n  position: sticky;\r\n  z-index: 1100;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 64px;\r\n  padding-right: 24px;\r\n  padding-left: 24px;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  color: #fff;\r\n  background-color: #3f51b5;\r\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);`\r\n\r\nconst Form = styled.form`\r\ndisplay: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n`\r\nconst Button = styled.button`\r\ndisplay: inline-block;\r\n  width: 48px;\r\n  height: 48px;\r\n  border: 0;\r\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\r\n  background-size: 40%;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  opacity: 0.6;\r\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  cursor: pointer;\r\n  outline: none;\r\n  :hover{\r\n    opacity: 1;\r\n  }\r\n`\r\nconst Span = styled.span`\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 1px;\r\n  padding: 0;\r\n  overflow: hidden;\r\n  clip: rect(0, 0, 0, 0);\r\n  white-space: nowrap;\r\n  clip-path: inset(50%);\r\n  border: 0;`\r\n\r\n  const Input = styled.input`\r\n  display: inline-block;\r\n  width: 100%;\r\n  font: inherit;\r\n  font-size: 20px;\r\n  border: none;\r\n  outline: none;\r\n  padding-left: 10px;\r\n  padding-right: 4px;\r\n  ::placeholder{\r\n    font: inherit;\r\n    font-size: 18px;\r\n  }\r\n  `\r\nexport default  ({defaultValue,onChange,onSubmit}) =>{\r\n    return(\r\n        <>\r\n        <Header>\r\n            <Form onSubmit={onSubmit}>\r\n                <Button>\r\n                     <Span>Search</Span>\r\n                </Button>\r\n                <Input type=\"text\" autocomplete=\"off\" autoFocus value={defaultValue} onChange={onChange}  placeholder=\"Search images and photos\" />\r\n            </Form>\r\n        </Header>\r\n        </>\r\n    )\r\n}\r\n\r\n","import axios from 'axios';\r\n\r\nexport default (searchQuery,page) => {\r\n   return axios.get(`https://pixabay.com/api/?q=${searchQuery}&page=${page}&key=15599000-288ca625732bcf6a027b1d7ae&image_type=photo&orientation=horizontal&per_page=12`)\r\n}","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ImageGalleryItem = styled.li`\r\n  border-radius: 2px;\r\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n    `\r\n\r\nconst ImageGalleryImg = styled.img`\r\n  width: 100%;\r\n  height: 260px;\r\n  object-fit: cover;\r\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  :hover{\r\n    transform: scale(1.03);\r\n    cursor: zoom-in;\r\n  }\r\n  `\r\n\r\nconst ImageItem =({item,imgClick}) =>{\r\n    return (\r\n        <ImageGalleryItem >\r\n            <ImageGalleryImg src={item.webformatURL} data-action={item.largeImageURL} onClick={imgClick}/>\r\n        </ImageGalleryItem>\r\n    )\r\n}\r\n\r\nImageItem.propType ={\r\n  item : PropTypes.object.isRequired,\r\n}\r\nexport {ImageItem};","import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\nconst LoadMore = styled.button`\r\npadding: 8px 16px;\r\n  border-radius: 2px;\r\n  background-color: #3f51b5;\r\n  text-align: center;\r\n  display: block;\r\n  margin:0 auto;\r\n  margin-top:10px;\r\n  color: #fff;\r\n  border: 0;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  font-family: inherit;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  min-width: 180px;\r\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n  :hover,\r\n:focus {\r\n  background-color: #303f9f;\r\n}`\r\n\r\nexport const Button = ({onClick}) => {\r\n    return (\r\n        <LoadMore onClick={onClick}>Load more</LoadMore>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types'\r\nimport {ImageItem} from '../ImageGalleryItem/ImageGalleryItem';\r\nimport {Button} from '../Button/Button'\r\n\r\nconst ImageGallerys = styled.ul`\r\n  display: grid;\r\n  max-width: calc(100vw - 48px);\r\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n  grid-gap: 16px;\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n  margin-left: auto;\r\n  margin-right: auto;`\r\n\r\nconst ImageGallery = ({articles,onClick,allArticles,imgClick}) => {\r\n    return (\r\n      <>\r\n        <ImageGallerys>\r\n            {articles.map(el => <ImageItem item={el} key={el.id} imgClick={imgClick}/>)}\r\n        </ImageGallerys>\r\n        {articles.length !== 0 && articles.length !== allArticles && <Button onClick={onClick}/>}\r\n      </>\r\n    )\r\n}\r\n\r\nImageGallery.propTypes ={\r\n  articles : PropTypes.arrayOf(PropTypes.object).isRequired,\r\n}\r\nexport {ImageGallery};\r\n","import React from 'react';\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport './Loader.css';\r\n\r\nexport const Loader = () => {\r\n    return (\r\n        <div className=\"lds-heart\"><div></div></div>\r\n    )\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport  './Modal.css'\r\nexport const Modal = ({src,overlayClick,esc}) => {\r\n    const closeModal=(e)=>{\r\n        if(e.key === 'Escape'){\r\n           esc()\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        window.addEventListener('keydown',closeModal);\r\n        return ()=> {window.removeEventListener('keydown',closeModal)}\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"Overlay\" onClick={overlayClick}>\r\n            <div className=\"Modal\">\r\n                <img src={src} alt=\"\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useState,useEffect } from 'react';\nimport Searchbar from './components/Searchbar/Searchbar'\nimport fetchRequest from './utils/API';\nimport {ImageGallery} from './components/ImageGallery/ImageGallery';\nimport {Loader} from './components/Loader/Loader'\nimport {Modal} from './components/Modal/Modal'\n\nexport default () => {\n  const [searchQuery,setSearchQuery] = useState('');\n  const [page] = useState(1);\n  const [nextPage,setNextPage] = useState(page+1)\n  const [galleryList,setGalleryList] = useState([]);\n  const [isLoaded,setLoader] = useState(false);\n  const [totalArticles,setTotalArticles] = useState(null);\n  const [overlayImg,setOverlayImg] = useState(null);\n\n\n  useEffect(() =>{\n      if (galleryList.length > 12) {\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: \"smooth\",\n        });\n      }\n  },[galleryList])\n\n  \n\n  const handleChange = (e) =>{\n    const {value} = e.target;\n    setSearchQuery(value);\n  } \n\n  const onSubmit = (e) =>{\n    e.preventDefault();\n    setLoader(true);\n    fetchRequest(searchQuery,page)\n      .then(data => {\n        const articles = data.data.hits;\n        setGalleryList(articles);\n        setLoader(false);\n        setTotalArticles(data.data.totalHits)\n        \n      })\n  }\n\n  const loadMoreClick = (e) =>{\n    fetchRequest(searchQuery,nextPage)\n      .then(data => {\n        const articles = data.data.hits;\n        setGalleryList([...galleryList,...articles])\n        setNextPage(nextPage+1);\n      })\n  }\n\n  const imageClick=(e)=>{\n    setOverlayImg(e.target.dataset.action)\n  }\n  const overlayClick=(e)=>{\n      if(e.target.nodeName !== 'IMG'){\n        setOverlayImg(null)\n      }\n  }    \n  const exitByEsc = () =>{\n    setOverlayImg(null)\n\n  }\n    return (\n      <>\n        <Searchbar defaultValue={searchQuery} onChange={handleChange} onSubmit={onSubmit} />\n        {isLoaded === true ? <Loader/> : <ImageGallery articles={galleryList} onClick={loadMoreClick} allArticles={totalArticles} imgClick={imageClick}/>}\n        {overlayImg !== null && <Modal src={overlayImg} overlayClick={overlayClick} esc={exitByEsc}/>}\n      </>\n    );\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}